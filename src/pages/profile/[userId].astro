---
// src/pages/profile/[userId].astro
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  return [];
}
---
<Layout title="Profile">
  <div class="max-w-5xl mx-auto">
    <!-- Profile Header -->
    <div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg shadow-lg overflow-hidden mb-6">
      <div class="h-32"></div>
      <div class="bg-white px-6 pb-6">
        <div class="flex items-end -mt-16 mb-4">
          <img id="profile-avatar" class="w-32 h-32 rounded-full border-4 border-white shadow-lg" />
          <div class="ml-4 flex-1">
            <h1 id="profile-name" class="text-3xl font-bold"></h1>
            <p id="profile-username" class="text-gray-600"></p>
          </div>
          <div class="space-x-3">
            <button id="edit-profile-btn" class="hidden bg-yellow-500 text-white px-6 py-2 rounded-lg font-semibold hover:bg-yellow-600 transition">
              Edit Profile
            </button>
            <button id="message-btn" class="hidden bg-blue-600 text-white px-6 py-2 rounded-lg font-semibold hover:bg-blue-700 transition">
              Message
            </button>
            <button id="follow-btn" class="hidden bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-2 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition">
              Follow
            </button>
            <button id="unfollow-btn" class="hidden bg-gray-200 text-gray-700 px-6 py-2 rounded-lg font-semibold hover:bg-gray-300 transition">
              Unfollow
            </button>
          </div>
        </div>
        
        <div id="bio-container">
          <p id="profile-bio" class="text-gray-700 mb-4"></p>
        </div>
        
        <div class="flex space-x-8">
          <div>
            <span id="posts-count" class="font-bold text-xl">0</span>
            <span class="text-gray-600"> Posts</span>
          </div>
          <div>
            <span id="followers-count" class="font-bold text-xl">0</span>
            <span class="text-gray-600"> Followers</span>
          </div>
          <div>
            <span id="following-count" class="font-bold text-xl">0</span>
            <span class="text-gray-600"> Following</span>
          </div>
        </div>
      </div>
    </div>

    <!-- User Posts -->
    <div class="bg-white rounded-lg shadow-md p-6">
      <h2 class="text-2xl font-bold mb-6">Posts</h2>
      <div id="user-posts" class="space-y-6">
        <div class="text-center py-8 text-gray-500">
          Loading posts...
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Profile Modal -->
  <div id="edit-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 w-full max-w-md mx-4">
      <h3 class="text-xl font-bold mb-4">Edit Profile</h3>
      
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 mb-2">Profile Picture</label>
        <input type="file" id="avatar-input" accept="image/*" class="w-full p-2 border border-gray-300 rounded">
        <img id="avatar-preview" class="mt-2 w-24 h-24 rounded-full object-cover hidden">
      </div>
      
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 mb-2">Display Name</label>
        <input type="text" id="edit-name" class="w-full p-2 border border-gray-300 rounded">
      </div>
      
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">Bio</label>
        <textarea id="edit-bio" rows="3" class="w-full p-2 border border-gray-300 rounded resize-none"></textarea>
      </div>
      
      <div class="flex justify-end space-x-3">
        <button id="cancel-edit" class="px-4 py-2 text-gray-600 border rounded hover:bg-gray-50">Cancel</button>
        <button id="save-edit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Save</button>
      </div>
    </div>
  </div>

  <script>
    // @ts-nocheck
    const API_URL = 'https://myblog-v804.onrender.com';
    const token = localStorage.getItem('token');

    if (!token) {
      window.location.href = '/login';
    }

    const userId = window.location.pathname.split('/').pop();
    let currentUser;
    let profileUser;
    let isOwner = false;

    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    async function loadCurrentUser() {
      const res = await fetch(`${API_URL}/api/users/me`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      currentUser = await res.json();
      isOwner = currentUser._id === userId;
    }

    async function loadProfile() {
      const res = await fetch(`${API_URL}/api/users/${userId}`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      profileUser = await res.json();

      document.getElementById('profile-avatar').src = profileUser.avatar;
      document.getElementById('profile-name').textContent = profileUser.displayName;
      document.getElementById('profile-username').textContent = '@' + profileUser.username;
      document.getElementById('profile-bio').textContent = profileUser.bio || 'No bio yet';
      document.getElementById('posts-count').textContent = profileUser.posts?.length || 0;
      document.getElementById('followers-count').textContent = profileUser.followers?.length || 0;
      document.getElementById('following-count').textContent = profileUser.following?.length || 0;

      if (isOwner) {
        document.getElementById('edit-profile-btn').classList.remove('hidden');
      } else {
        document.getElementById('message-btn').classList.remove('hidden');
        const isFollowing = currentUser.following?.includes(userId);
        if (isFollowing) {
          document.getElementById('unfollow-btn').classList.remove('hidden');
        } else {
          document.getElementById('follow-btn').classList.remove('hidden');
        }
      }

      loadPosts();
    }

    function loadPosts() {
      const postsContainer = document.getElementById('user-posts');
      if (profileUser.posts?.length) {
        postsContainer.innerHTML = profileUser.posts.map(post => `
          <div class="border-b border-gray-200 pb-6">
            <h3 class="text-xl font-bold mb-2">${escapeHtml(post.title)}</h3>
            <p class="text-gray-700 mb-3">${escapeHtml(post.content)}</p>
            ${post.tags?.length ? `
              <div class="flex flex-wrap gap-2 mb-3">
                ${post.tags.map(tag => `<span class="bg-blue-100 text-blue-600 px-3 py-1 rounded-full text-sm">${escapeHtml(tag)}</span>`).join('')}
              </div>
            ` : ''}
            <div class="flex items-center space-x-6 text-sm text-gray-500">
              <span>${post.likes?.length || 0} likes</span>
              <span>${post.comments?.length || 0} comments</span>
              <span>${new Date(post.createdAt).toLocaleDateString()}</span>
            </div>
          </div>
        `).join('');
      } else {
        postsContainer.innerHTML = '<p class="text-center text-gray-500">No posts yet</p>';
      }
    }

    document.getElementById('edit-profile-btn').addEventListener('click', () => {
      document.getElementById('edit-name').value = profileUser.displayName;
      document.getElementById('edit-bio').value = profileUser.bio || '';
      
      const avatarPreview = document.getElementById('avatar-preview');
      avatarPreview.src = profileUser.avatar;
      avatarPreview.classList.remove('hidden');
      
      document.getElementById('edit-modal').classList.remove('hidden');
    });

    document.getElementById('cancel-edit').addEventListener('click', () => {
      document.getElementById('edit-modal').classList.add('hidden');
    });

    document.getElementById('avatar-input').addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          document.getElementById('avatar-preview').src = e.target.result;
          document.getElementById('avatar-preview').classList.remove('hidden');
        };
        reader.readAsDataURL(file);
      }
    });

    document.getElementById('save-edit').addEventListener('click', async () => {
      const formData = new FormData();
      
      formData.append('displayName', document.getElementById('edit-name').value);
      formData.append('bio', document.getElementById('edit-bio').value);
      
      const avatarFile = document.getElementById('avatar-input').files[0];
      if (avatarFile) {
        formData.append('avatar', avatarFile);
      }

      try {
        const res = await fetch(`${API_URL}/api/users/${userId}`, {
          method: 'PUT',
          headers: { 'Authorization': `Bearer ${token}` },
          body: formData
        });

        if (res.ok) {
          document.getElementById('edit-modal').classList.add('hidden');
          await loadProfile();
          alert('Profile updated successfully!');
        } else {
          alert('Failed to update profile');
        }
      } catch (error) {
        console.error('Error updating profile:', error);
        alert('Error updating profile');
      }
    });

    document.getElementById('follow-btn').addEventListener('click', async () => {
      await fetch(`${API_URL}/api/users/${userId}/follow`, {
        method: 'POST',
        headers: { 'Authorization': `Bearer ${token}` }
      });
      location.reload();
    });

    document.getElementById('unfollow-btn').addEventListener('click', async () => {
      await fetch(`${API_URL}/api/users/${userId}/follow`, {
        method: 'DELETE',
        headers: { 'Authorization': `Bearer ${token}` }
      });
      location.reload();
    });

    document.getElementById('message-btn').addEventListener('click', () => {
      window.location.href = `/chat?user=${userId}`;
    });

    document.getElementById('edit-modal').addEventListener('click', (e) => {
      if (e.target.id === 'edit-modal') {
        document.getElementById('edit-modal').classList.add('hidden');
      }
    });

    loadCurrentUser().then(loadProfile);
  </script>
</Layout>